{"version":3,"sources":["components/logo.svg","components/Header.js","components/Footer.js","components/Loading.js","App.js","reportWebVitals.js","index.js","models/index.js","stores/user.js","stores/history.js","stores/image.js","stores/auth.js","stores/index.js"],"names":["Header","styled","header","Logo","img","StyledLink","NavLink","Login","div","StyledButton","Button","Component","observer","history","useHistory","useStores","UserStore","AuthStore","useEffect","pullUser","src","LogoUrl","to","activeClassName","exact","currentUser","attributes","username","type","onClick","logout","console","log","push","Footer","footer","component","Loading","Home","lazy","History","About","Register","App","fallback","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","AV","init","appId","appKey","serverURL","Auth","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","loginedUser","error","logIn","logOut","current","Uploader","add","file","filename","item","Object","avFile","File","set","save","serverFile","find","page","limit","query","Query","include","skip","descending","equalTo","results","catch","window","makeObservable","this","observable","action","newList","list","concat","isLoading","append","length","hasMore","message","finally","newFilename","newFile","isUploading","isUpoading","err","values","resetUser","HistoryStore","reset","ImageStore","context","createContext","stores","useContext"],"mappings":"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","file":"static/js/main.4d92bee6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from 'react';\r\nimport LogoUrl from './logo.svg';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport { useStores } from '../stores';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst Header = styled.header`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 10px 100px;\r\n    background-color: #02101f;\r\n    color: #fff;\r\n`;\r\nconst Logo = styled.img`\r\n    height: 30px;\r\n`;\r\nconst StyledLink = styled(NavLink)`   \r\n    color: #fff;\r\n    margin-left: 30px;\r\n\r\n    &.active {\r\n        border-bottom: 1px solid #fff;\r\n    }\r\n`;\r\n//上面这个 Link 前没加 . 是因为把 Link当做函数\r\nconst Login = styled.div`\r\n    margin-left: auto;\r\n`;\r\nconst StyledButton = styled(Button)`\r\n\tmargin-left: 10px;\r\n`;\r\n\r\nconst Component = observer(() => {      \r\n    \r\n    const history = useHistory();\r\n    const { UserStore, AuthStore } = useStores();\r\n\r\n    const handleLogout = () => {\r\n        AuthStore.logout();\r\n    };\r\n\r\n    const handleLogin = () => {\r\n        console.log('跳转到登录页面')\r\n        history.push('/login');\r\n      };\r\n\r\n    const handleRegister = () => {\r\n        console.log('跳转到注册页面')\r\n        history.push('./register');\r\n    };\r\n\r\n    useEffect(()=>{\r\n        UserStore.pullUser();\r\n      },[])\r\n    \r\n    \r\n    return(\r\n        <Header>                \r\n            <Logo src = {LogoUrl} />\r\n            <nav>\r\n                <StyledLink to = \"/\" activeClassName = \"active\" exact>首页</StyledLink>\r\n                <StyledLink to = \"/history\" activeClassName = \"active\">上传历史</StyledLink>\r\n                <StyledLink to = \"/about\" activeClassName = \"active\">关于我</StyledLink>\r\n            </nav>\r\n\r\n            <Login>\r\n                {\r\n                    UserStore.currentUser ? <>\r\n                    {UserStore.currentUser.attributes.username} <StyledButton type= \"primary\" onClick = {handleLogout}>注销</StyledButton>\r\n                    </> :<>\r\n                    <StyledButton type=\"primary\" onClick={handleLogin}>登录</StyledButton>\r\n                    <StyledButton type=\"primary\" onClick={handleRegister}>注册</StyledButton>\r\n                    </>\r\n                }                                                    \r\n            </Login>\r\n        </Header>\r\n    );                   // 在组件render中，必须用一个标签包裹起来，即使是空标签\r\n});\r\n\r\n\r\nexport default Component;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Footer = styled.footer`\r\n    padding: 10px 100px;\r\n    text-align: center;\r\n    font-size: 12px;\r\n    color: #aaa;\r\n`;\r\n\r\nfunction component() {         \r\n    return(\r\n        <Footer>                \r\n            <p>Footer</p>\r\n        </Footer>\r\n    );                   // 在组件render中，必须用一个标签包裹起来，即使是空标签\r\n}\r\n\r\n\r\nexport default component;","import React from 'react';\r\n\r\n function Loading() {\r\n    return (\r\n        <div>\r\n            Loading...\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","import React, { Suspense, lazy } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Loading from './components/Loading';\n\n\n// import Home from './pages/Home';\n// import History from './pages/History';\n// import About from './pages/About';\n\nimport {\n  Switch,\n  Route\n} from 'react-router-dom';\n// <Router> 换成了 <HashRouter> 就不报错了\n\nconsole.log('loading...')\n\nconst Home = lazy(() => import('./pages/Home'));  // 懒加载\nconst History = lazy(() => import('./pages/History'));\nconst About = lazy(() => import('./pages/About'));\nconst Login = lazy(() => import('./pages/Login'));\nconst Register = lazy(() => import('./pages/Register'));\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <main>\n        <Suspense fallback = {<Loading />}>\n          <Switch>  \n{/* 下面这行代码可写成 <Router path = \"/\" exact><Home></Home></Router> */} \n            <Route path = \"/\" exact component = {Home} />\n            <Route path = \"/history\" component = {History} />\n            <Route path = \"/about\"  component = {About} />\n            <Route path = \"/login\"  component = {Login} />\n            <Route path = \"/register\"  component = {Register} />\n          </Switch>\n        </Suspense>\n      </main>\n      <Footer />\n    </>\n  );\n}\n// 上面的 \"/\" exact 表示 http://localhost:3000/history中的/history 是历史页面，而http://localhost:3000/ 是首页 Home页面，/about 是关于页面； 如果不写 exact 则每个页面都是 首页 Home 页面 \n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nimport reportWebVitals from './reportWebVitals';\nimport {\n  HashRouter as Router\n} from 'react-router-dom';\n\nReactDOM.render(\n    <Router>      \n      <App />\n    </Router>,\n  document.getElementById('root')\n);\n\n//import Model from '../models';\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n//<React.StrictMode>\n//reportWebVitals();\n//import reportWebVitals from './reportWebVitals';","import AV, { Query, User } from 'leancloud-storage';\r\n\r\nAV.init({\r\n  appId: \"mbOVnHyYBovoxTpKRcciMeJi-gzGzoHsz\",\r\n  appKey: \"cWgp1MKc3u5d66BIEI63Vc0o\",\r\n  serverURL: \"https://mbovnhyy.lc-cn-n1-shared.com\"\r\n});\r\n\r\nconst Auth = {\r\n  register(username, password) {\r\n    let user = new User();\r\n    user.setUsername(username);\r\n    user.setPassword(password);\r\n    return new Promise((resolve, reject) => {\r\n      user.signUp().then(loginedUser => resolve(loginedUser), error => reject(error))\r\n    });\r\n  },\r\n\r\n  login(username, password) {\r\n    console.log('------')\r\n    console.log(username, password)\r\n    return new Promise((resolve, reject) => {\r\n      User.logIn(username, password).then(loginedUser => resolve(loginedUser), error => reject(error));\r\n    });\r\n  },\r\n\r\n  logout() {\r\n    User.logOut();\r\n  },\r\n\r\n  getCurrentUser() {\r\n    return User.current();\r\n  }\r\n\r\n};\r\n\r\n//uploaer是上传的接口，当调用 uploader 时会创建一个图片，要想调用必须向服务器传递 file 和filename参数\r\nconst Uploader = {\r\n  add(file, filename) {\r\n    const item = new AV.Object('Image');\r\n    //item 代表上传的一个项目，这里的item 相当于范例中的 product，把var全换成了 const\r\n    const avFile = new AV.File(filename, file);\r\n    item.set('filename', filename);\r\n    item.set('owner', AV.User.current());\r\n    item.set('url', avFile);\r\n    //返回 promise 是为了便于打包，包装\r\n    return new Promise((resolve, reject) => {\r\n      item.save().then(serverFile => resolve(serverFile), error => reject(error));\r\n    });\r\n  },\r\n  \r\n  find(page=0, limit=10) {         //limit=10限制最多返回 10 条\r\n    const query = new AV.Query('Image');\r\n    query.include('owner');\r\n    query.limit(limit);\r\n    query.skip(page*limit);         //skip(20) 跳过前 20 条信息\r\n    query.descending('createdAt');      // 以创建时间作降序排列\r\n    query.equalTo('owner', AV.User.current());\r\n    return new Promise((resolve, reject) => {\r\n      query.find()\r\n        .then(results => resolve(results))\r\n        .catch(error => reject(error))\r\n    });\r\n  }\r\n}\r\n\r\nwindow.Uploader = Uploader;\r\n\r\n\r\nexport {\r\n  Auth,\r\n  Uploader\r\n};","import {observable , action, makeObservable } from 'mobx';\r\nimport { Auth } from '../models';\r\n\r\nclass UserStore {\r\n    @observable currentUser = null;\r\n\r\n    @action pullUser() {                   // 拿取用户信息，调用 models的index.js的getCurrentUser    \r\n        this.currentUser = Auth.getCurrentUser()\r\n    }\r\n\r\n    @action resetUser() {                  // 重置，再调用用户信息后使其为默认值null\r\n        this.currentUser = null;\r\n    }\r\n\r\n    constructor() {\r\n        makeObservable(this)\r\n    };\r\n}\r\n\r\nexport default new  UserStore();  //将这个导出的class 变为导出对象","import {observable , action, makeObservable } from 'mobx';\r\nimport { Uploader } from '../models';\r\nimport { message } from \"antd\";\r\n\r\nclass HistoryStore {\r\n    @observable list = [];\r\n    @observable isLoading = false;\r\n    @observable hasMore = true;\r\n    @observable page = 0; \r\n    limit = 10;\r\n\r\n    @action append(newList) {\r\n        this.list = this.list.concat(newList);\r\n    }\r\n\r\n    @action find() {\r\n        this.isLoading = true;\r\n        Uploader.find({page: this.page, limit: this.limit})\r\n            .then(newList => {\r\n                this.append(newList);\r\n                this.page++;\r\n                if(newList.length < this.limit) {\r\n                    this.hasMore = false; \r\n                }\r\n            }).catch(error => {\r\n                message.error('加载数据失败');\r\n            }).finally(() => {\r\n                this.isLoading = false;\r\n            })\r\n    }\r\n\r\n    @action reset() {\r\n        this.list = [];\r\n        this.isLoading = false;\r\n        this.hasMore = true;\r\n        this.page = 0;\r\n      }\r\n\r\n    constructor() {\r\n        makeObservable(this)\r\n    };\r\n\r\n}\r\n\r\nexport default new HistoryStore();  //将这个导出的class 变为导出对象","import {observable , action, makeObservable } from 'mobx';\r\nimport { Uploader } from '../models';\r\nimport { message } from \"antd\";\r\n\r\nclass ImageStore {\r\n    //要管理维护的数据有filename文件名, file是点击input或者其他方式 要加载的一个文件\r\n    @observable filename = \"\"; \r\n    @observable file = null; \r\n    @observable isUpoading = false;\r\n    @observable serverFile = null;\r\n    //serverFile 在 UI层，可以把上传的数据直接从 serverFile里拿出来，逻辑就清晰了\r\n\r\n    @action setFilename(newFilename) {\r\n        this.filename = newFilename;\r\n    }\r\n\r\n    @action setFile(newFile) {\r\n        this.file = newFile;\r\n    }\r\n\r\n    @action upload() {\r\n        this.isUploading = true; //该函数在改变 isUploading 的状态\r\n        //这里返回的是一个 promise对象，所以后面可以直接去 .then\r\n        //为了后续的可以再次去捕获错误，包括之后的逻辑，可以再做一个封装return new Promise\r\n        this.isUpoading = true;\r\n        this.serverFile = null;\r\n        return new Promise((resolve, reject) => {\r\n        Uploader.add(this.file, this.filename)\r\n        .then(serverFile => {\r\n            this.serverFile = serverFile;\r\n            resolve(serverFile);\r\n        }).catch(err => {\r\n            message.error('上传失败');\r\n            reject(err);\r\n        }).finally(() => {\r\n            this.isUpoading = false;\r\n            });\r\n        })\r\n    } \r\n\r\n    @action reset() {\r\n        this.isUpoading = false;\r\n        this.serverFile = null;\r\n      }\r\n\r\n    constructor() {\r\n        makeObservable(this)\r\n    };\r\n}\r\n\r\n\r\n    \r\nexport default new  ImageStore();  //将这个导出的class 变为导出对象","import {observable , action, makeObservable } from 'mobx';\r\nimport { Auth } from '../models';\r\nimport UserStore from './user';\r\nimport HistoryStore from './history';\r\nimport ImageStore from './image';\r\nimport { message } from \"antd\";\r\n\r\nclass AuthStore {\r\n    @observable values = {\r\n        username: '',\r\n        password: ''\r\n    };\r\n\r\n    @action setUsername(username) {\r\n        this.values.username = username;\r\n    }\r\n\r\n    @action setPassword(password) {\r\n        this.values.password = password;\r\n    }\r\n    // 下面一个是真正的，可以发请求的登录\r\n    @action login() {\r\n        return new Promise((resolve, reject) => {\r\n            Auth.login(this.values.username, this.values.password)\r\n            .then(user => {\r\n                UserStore.pullUser();\r\n                resolve(user);\r\n            }).catch(err => {\r\n                UserStore.resetUser();\r\n                message.error('登录失败');\r\n                reject(err);\r\n            })\r\n        });   \r\n    }\r\n\r\n    @action register() {\r\n        return new Promise((resolve, reject) => {\r\n            Auth.register(this.values.username, this.values.password)\r\n            .then(user => {\r\n                UserStore.pullUser();\r\n                resolve(user);\r\n            }).catch(err => {\r\n                UserStore.resetUser();\r\n                message.error('注册失败');\r\n                reject(err);\r\n            })\r\n          });   \r\n        }\r\n\r\n    @action logout() {\r\n        Auth.logout();\r\n        UserStore.resetUser();\r\n        HistoryStore.reset();\r\n        ImageStore.reset();\r\n    }\r\n\r\n    constructor() {\r\n        makeObservable(this)\r\n    };\r\n\r\n}\r\n\r\nexport default new AuthStore();     //将这个导出的class 变为导出对象","import React, { createContext, useContext } from 'react';\r\nimport AuthStore from './auth';\r\nimport UserStore from './user';\r\nimport ImageStore from './image';\r\nimport HistoryStore from './history';\r\n\r\nconst context = createContext({\r\n  AuthStore,          // 直接得到这两个对象\r\n  UserStore,\r\n  ImageStore,\r\n  HistoryStore\r\n});\r\n\r\nwindow.stores = {\r\n  AuthStore,\r\n  UserStore,\r\n  ImageStore,\r\n  HistoryStore\r\n};\r\n\r\nexport const useStores = () => useContext(context);\r\n"],"sourceRoot":""}